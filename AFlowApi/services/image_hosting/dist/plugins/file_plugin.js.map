{"version":3,"sources":["../../plugins/file_plugin.js"],"names":["File","require","module","exports","file","options","add","msg","respond","name","path","mimetype","create_date","Date","save","pageSize","parseInt","pageNum","count","find","sort","skip","limit","files","index","host","data","size","list","remove","_id","$in","JSON","parse","ids","findById","id","err","entity"],"mappings":";;;;AAAA,IAAIA,OAAOC,QAAQ,sBAAR,CAAX;AACA;;;;;;AAMAC,OAAOC,OAAP,GAAiB,SAASC,IAAT,CAAcC,OAAd,EAAuB;AACpC,SAAKC,GAAL,CAAS,mBAAT,EAA8B,SAASA,GAAT,CAAaC,GAAb,EAAkBC,OAAlB,EAA2B;;AAErD,YAAIJ,OAAO,IAAIJ,IAAJ,CAAS;AAChBS,kBAAMF,IAAIE,IADM;AAEhBC,kBAAMH,IAAIG,IAFM;AAGhBC,sBAAUJ,IAAII,QAHE;AAIhBC,yBAAa,IAAIC,IAAJ;AAJG,SAAT,CAAX;;AAOAT,aAAKU,IAAL,CAAUN,OAAV;;AAEA;;;;;;;;;;;;;AAaH,KAxBD;;AA0BA,SAAKF,GAAL,CAAS,oBAAT;AAAA,2EAA+B,iBAAoBC,GAApB,EAAyBC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnBO,oCAFmB,GAERC,SAAST,IAAIQ,QAAb,CAFQ;AAGnBE,mCAHmB,GAGTD,SAAST,IAAIU,OAAb,CAHS;AAAA;AAAA,mCAIHjB,KAAKkB,KAAL,EAJG;;AAAA;AAIjBA,iCAJiB;AAAA;AAAA,mCAKHlB,KAAKmB,IAAL,CAAU,EAAV,EACfC,IADe,CACV,cADU,EAEfC,IAFe,CAEVN,YAAYE,UAAU,CAAtB,CAFU,EAGfK,KAHe,CAGTP,QAHS,CALG;;AAAA;AAKjBQ,iCALiB;;;AAUvB,iCAAKC,KAAL,IAAcD,KAAd,EAAqB;AACjBA,sCAAMC,KAAN,EAAad,IAAb,GAAoBH,IAAIkB,IAAJ,GAAWF,MAAMC,KAAN,EAAad,IAA5C;AACH;;AAEGgB,gCAdmB,GAcZ;AACPX,0CAAUA,QADH;AAEPE,yCAASA,OAFF;AAGPU,sCAAMT,KAHC;AAIPU,sCAAML;AAJC,6BAdY;;AAoBvBf,oCAAQ,IAAR,EAAckB,IAAd;AApBuB;AAAA;;AAAA;AAAA;AAAA;;AAsBvBlB,iDAAa,IAAb;;AAtBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/B;;AAAA,iBAA8CoB,IAA9C;AAAA;AAAA;;AAAA,eAA8CA,IAA9C;AAAA;;AAyBI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAzBJ;;AA0DA,SAAKtB,GAAL,CAAS,sBAAT,EAAiC,SAASuB,MAAT,CAAgBtB,GAAhB,EAAqBC,OAArB,EAA8B;AAC3DR,aAAK6B,MAAL,CAAY,EAACC,KAAK,EAACC,KAAKC,KAAKC,KAAL,CAAW1B,IAAI2B,GAAf,CAAN,EAAN,EAAZ,EAA+C1B,OAA/C;AACA;;;;;;;AAOH,KATD;;AAWA,SAAKF,GAAL,CAAS,qBAAT,EAAgC,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC9CR,aAAKmC,QAAL,CAAc5B,IAAI6B,EAAlB,EAAsB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACnC,gBAAI/B,IAAIkB,IAAJ,IAAY,CAACY,GAAb,IAAoBC,MAAxB,EAAgC;AAC5B;AACA;AACA;AACAA,uBAAO5B,IAAP,GAAcH,IAAIkB,IAAJ,GAAWa,OAAO5B,IAAhC;AACH;AACDF,oBAAQ6B,GAAR,EAAaC,MAAb;AACH,SARD;;AAUA;;;;;;;;;;;;;AAaH,KAxBD;AAyBH,CAzHD","file":"file_plugin.js","sourcesContent":["var File = require('../../../models/file');\r\n/*\r\nvar seneca = require('seneca')();\r\nseneca\r\n    .use(\"basic\")\r\n    .use(\"entity\");*/\r\n\r\nmodule.exports = function file(options) {\r\n    this.add('role:file,cmd:add', function add(msg, respond) {\r\n\r\n        var file = new File({\r\n            name: msg.name,\r\n            path: msg.path,\r\n            mimetype: msg.mimetype,\r\n            create_date: new Date()\r\n        });\r\n\r\n        file.save(respond);\r\n\r\n        /*        var file = seneca.make('file');\r\n                file.name = msg.name;\r\n                file.path = msg.path;\r\n                file.mimetype = msg.mimetype;\r\n                file.createDate = new Date();\r\n                file.save$(function (err, entity) {\r\n                    if (msg.host && !err && entity) {\r\n                        entity.path = msg.host + entity.path;\r\n                    }\r\n                    if (!entity)\r\n                        err.status = 500;\r\n                    respond(err, entity);\r\n                });*/\r\n    });\r\n\r\n    this.add('role:file,cmd:list', async function list(msg, respond) {\r\n        try {\r\n            var pageSize = parseInt(msg.pageSize);\r\n            var pageNum = parseInt(msg.pageNum);\r\n            const count = await File.count();\r\n            const files = await File.find({})\r\n                .sort('-create_date')\r\n                .skip(pageSize * (pageNum - 1))\r\n                .limit(pageSize);\r\n\r\n            for (index in files) {\r\n                files[index].path = msg.host + files[index].path;\r\n            }\r\n\r\n            var data = {\r\n                pageSize: pageSize,\r\n                pageNum: pageNum,\r\n                size: count,\r\n                list: files\r\n            };\r\n            respond(null, data);\r\n        } catch (err) {\r\n            respond(err, null);\r\n        }\r\n\r\n        /*        async.waterfall([\r\n                    function (cb) {//使用原生方式查询\r\n                        fileSeneca.native$(function (err, db) {\r\n                            var collection = db.collection('file');\r\n                            collection.find({}).count(function (err, count) {\r\n                                cb(err, count);\r\n                            });\r\n                        })\r\n                    },\r\n                    function (count, cb) {\r\n                        fileSeneca.list$({\r\n                            sort$: {createDate: -1},\r\n                            limit$: pageSize,\r\n                            skip$: pageSize * (pageNum - 1)\r\n                        }, function (err, entities) {\r\n                            var data = {\r\n                                pageSize: pageSize,\r\n                                pageNum: pageNum,\r\n                                size: count,\r\n                                list: []\r\n                            };\r\n                            if (msg.host && !err && entities) {\r\n                                for (var i = 0; i < entities.length; i++) {\r\n                                    entities[i].path = msg.host + entities[i].path;\r\n                                }\r\n                                data.list = entities;\r\n                            }\r\n                            cb(err, data);\r\n                        });\r\n                    }\r\n                ], respond);*/\r\n    });\r\n\r\n    this.add('role:file,cmd:remove', function remove(msg, respond) {\r\n        File.remove({_id: {$in: JSON.parse(msg.ids)}}, respond);\r\n        /*        fileSeneca.remove$({id: msg.id}, function (err, entity) {\r\n                    if (!entity) {\r\n                        err = new Error('Not Found');\r\n                        err.status = 404;\r\n                    }\r\n                    respond(err, entity);\r\n                });*/\r\n    });\r\n\r\n    this.add('role:file,cmd:query', (msg, respond) => {\r\n        File.findById(msg.id, (err, entity) => {\r\n            if (msg.host && !err && entity) {\r\n                // var path = msg.host + entity.path;\r\n                // path = path.replace(/\\\\/g, \"/\");\r\n                // path = path.replace(\"/public\", \"\");\r\n                entity.path = msg.host + entity.path;\r\n            }\r\n            respond(err, entity);\r\n        });\r\n\r\n        /*        fileSeneca.load$({id: msg.id}, function (err, entity) {\r\n                    if (msg.host && !err && entity) {\r\n                        // var path = msg.host + entity.path;\r\n                        // path = path.replace(/\\\\/g, \"/\");\r\n                        // path = path.replace(\"/public\", \"\");\r\n                        entity.path = msg.host + entity.path;\r\n                    }\r\n                    if (!entity) {\r\n                        err = new Error('Not Found');\r\n                        err.status = 404;\r\n                    }\r\n                    respond(err, entity);\r\n                });*/\r\n    });\r\n};"]}